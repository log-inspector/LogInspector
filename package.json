{
	"name": "loginspector",
	"displayName": "Log Inspector",
	"description": "Analyze log files to better understand the program that it describes.",
	"version": "1.4.3",
	"publisher": "LogInspector",
	"repository": {
		"type": "git",
		"url": "https://github.com/log-inspector/LogInspector"
	},
	"icon": "images/logo.png",
	"engines": {
		"vscode": "^1.41.0"
	},
	"categories": [
		"Other"
	],
	"keywords" : [ "log", "flame", "graph", "inspector", "analyze" ],
	"activationEvents": [
		"onCommand:loginspector.readLog",
		"onCommand:loginspector.matchFunction",
		"onCommand:loginspector.draw",
		"onCommand:loginspector.drawCluster",
		"onCommand:loginspector.drawFromLine"
	],
	"main": "./extension.js",
	"contributes": {
		"commands": [
			{
				"command": "loginspector.readLog",
				"title": "Log Inspector: Isolate Thread"
			},
			{
				"command": "loginspector.matchFunction",
				"title": "Log Inspector: Match"
			},
			{
				"command": "loginspector.draw",
				"title": "Log Inspector: Draw"
			},
			{
				"command": "loginspector.drawCluster",
				"title": "Log Inspector: Draw Cluster"
			},
			{
				"command": "loginspector.drawFromLine",
				"title": "Log Inspector: Draw From Line"
			}
		],
		"configuration": {
			"title": "Log Inspector",
			"properties": {
				"logInspector.lineStart": {
					"type": "string",
					"default": "^[0-9]{4}-[0-1][0-9]-[0-3][0-9]",
					"description": "A regex that matches the start of a log line. Any lines that do not start with this sequence will be considered continuations of the previous line."
				},
				"logInspector.lineRegex": {
					"type": "string",
					"default": "^(?<date>[0-9]{4}-[0-1][0-9]-[0-3][0-9]\\s[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3})\\s-\\s(t0x[0-9a-z]+\\s)?\\[(Debug[1-5]?|Warning|Error)\\]\\s*(?<body>.*)",
					"description": "A regex that matches entire log line. It should contain two named groups - 'date' and 'body'. "
				},
				"logInspector.truncateLine": {
					"type": "integer",
					"default": 150,
					"minimum": 30,
					"maximum": 500,
					"description": "The maximum length of the line before it is truncated. This should be big enough to catch all data needed for the successful analysis of the log file, and small enough not to hinder performance."
				},
				"logInspector.invertScroll": {
					"type" : "boolean",
					"default" : false,
					"description": "Defines whether scrolling up zooms in or out on the graph."
				}
			}
		}
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "node ./test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.1",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.41.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.0.1",
		"typescript": "^3.7.5",
		"vscode-test": "^1.3.0"
	}
}
